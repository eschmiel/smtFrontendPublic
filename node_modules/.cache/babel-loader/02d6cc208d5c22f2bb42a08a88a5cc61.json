{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\streamToggle\\\\frontend\\\\src\\\\components\\\\submenu\\\\submenu.js\";\nimport React from 'react';\nimport '../../css/submenu/Submenu.css';\nimport SettingsMenu from './settingsMenu.js';\nimport LinkedAccountsMenu from './linkedAccountsMenu.js';\nimport UnlinkAccountsMenu from './unlinkAccountsMenu.js';\nimport DeleteAccountConfirmMenu from './deleteAccountConfirmMenu.js';\nimport UnlinkAccountConfirmMenu from './unlinkAccountConfirmMenu.js';\n\nclass Submenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.select = this.select.bind(this);\n    this.manageSubmenuState = this.manageSubmenuState.bind(this);\n    this.getSelectedAccounts = this.getSelectedAccounts.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //props.twitter_accounts is derived from a remote call to an endpoint. We need to make sure we perform our initial transform \n    //after the call is complete and the props object is updated with the twitter_accounts data. \n    if (props.twitter_accounts !== state.prevPropsTwitter_Accounts) {\n      return {\n        prevPropsTwitter_Accounts: props.twitter_accounts,\n        prevLinkedAccounts: state.linkedAccounts,\n        linkedAccounts: props.twitter_accounts.map(twitterAccount => {\n          return {\n            account_id: twitterAccount.account_id,\n            selected: false\n          };\n        })\n      };\n    }\n\n    return null;\n  }\n\n  select(account_id) {\n    let indexOfSelected = this.state.linkedAccounts.findIndex(account => account.account_id === account_id);\n    let editedLinkedAccounts = this.state.linkedAccounts.map((account, index) => {\n      if (index === indexOfSelected) {\n        account.selected = !account.selected;\n      }\n\n      return account;\n    });\n    this.setState({\n      linkedAccounts: editedLinkedAccounts\n    });\n  }\n\n  getSelectedAccounts() {\n    let selectedAccounts = this.state.linkedAccounts.filter(account => account.selected);\n    return selectedAccounts;\n  }\n\n  manageSubmenuState() {\n    switch (this.props.currentState) {\n      case 'Settings':\n        return /*#__PURE__*/React.createElement(SettingsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }\n        });\n\n      case \"Linked Accounts\":\n        return /*#__PURE__*/React.createElement(LinkedAccountsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 44\n          }\n        });\n\n      case \"Unlink Account\":\n        return /*#__PURE__*/React.createElement(UnlinkAccountsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          linkedAccounts: this.state.linkedAccounts,\n          select: this.select,\n          selectedAccounts: this.getSelectedAccounts,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 43\n          }\n        });\n\n      case \"Confirm Unlink Account\":\n        return /*#__PURE__*/React.createElement(UnlinkAccountConfirmMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          selectedAccounts: this.getSelectedAccounts(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 51\n          }\n        });\n\n      case \"Delete User\":\n        return /*#__PURE__*/React.createElement(DeleteAccountConfirmMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 40\n          }\n        });\n\n      case \"Cancel\":\n        return /*#__PURE__*/React.createElement(SettingsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 35\n          }\n        });\n    }\n  }\n\n  componentDidMount() {\n    let linkedAccountsHelper = this.props.twitter_accounts.map(twitterAccount => {\n      return {\n        account_id: twitterAccount.account_id,\n        selected: false\n      };\n    });\n    this.setState({\n      linkedAccounts: linkedAccountsHelper\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Submenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, this.manageSubmenuState());\n  }\n\n}\n\nexport default Submenu;","map":{"version":3,"sources":["C:/repos/streamToggle/frontend/src/components/submenu/submenu.js"],"names":["React","SettingsMenu","LinkedAccountsMenu","UnlinkAccountsMenu","DeleteAccountConfirmMenu","UnlinkAccountConfirmMenu","Submenu","Component","constructor","props","state","select","bind","manageSubmenuState","getSelectedAccounts","getDerivedStateFromProps","twitter_accounts","prevPropsTwitter_Accounts","prevLinkedAccounts","linkedAccounts","map","twitterAccount","account_id","selected","indexOfSelected","findIndex","account","editedLinkedAccounts","index","setState","selectedAccounts","filter","currentState","changeSubmenuState","componentDidMount","linkedAccountsHelper","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../css/submenu/Submenu.css';\r\nimport SettingsMenu from './settingsMenu.js'\r\nimport LinkedAccountsMenu from './linkedAccountsMenu.js'\r\nimport UnlinkAccountsMenu from './unlinkAccountsMenu.js';\r\nimport DeleteAccountConfirmMenu from './deleteAccountConfirmMenu.js';\r\nimport UnlinkAccountConfirmMenu from './unlinkAccountConfirmMenu.js';\r\n\r\nclass Submenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {};\r\n\r\n        this.select = this.select.bind(this);\r\n        this.manageSubmenuState = this.manageSubmenuState.bind(this);\r\n        this.getSelectedAccounts = this.getSelectedAccounts.bind(this);\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {//props.twitter_accounts is derived from a remote call to an endpoint. We need to make sure we perform our initial transform \r\n                                                   //after the call is complete and the props object is updated with the twitter_accounts data. \r\n        if (\r\n            props.twitter_accounts !== state.prevPropsTwitter_Accounts\r\n        ) {\r\n            return {\r\n                prevPropsTwitter_Accounts: props.twitter_accounts,\r\n                prevLinkedAccounts: state.linkedAccounts,\r\n                linkedAccounts: props.twitter_accounts.map((twitterAccount) => { return { account_id: twitterAccount.account_id, selected: false } })\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    select(account_id) {\r\n        let indexOfSelected = this.state.linkedAccounts.findIndex((account) => account.account_id === account_id);\r\n\r\n        let editedLinkedAccounts = this.state.linkedAccounts.map((account, index) => { if (index === indexOfSelected) { account.selected = !account.selected; } return account; });\r\n\r\n        this.setState({ linkedAccounts: editedLinkedAccounts });\r\n    }\r\n\r\n\r\n    getSelectedAccounts() {\r\n        let selectedAccounts = this.state.linkedAccounts.filter((account) => account.selected);\r\n\r\n        return selectedAccounts;\r\n    }\r\n\r\n\r\n    manageSubmenuState() {\r\n        switch (this.props.currentState) {\r\n            case 'Settings': return <SettingsMenu changeSubmenuState={this.props.changeSubmenuState} />\r\n            case \"Linked Accounts\": return <LinkedAccountsMenu changeSubmenuState={this.props.changeSubmenuState} /> \r\n            case \"Unlink Account\": return <UnlinkAccountsMenu changeSubmenuState={this.props.changeSubmenuState} linkedAccounts={this.state.linkedAccounts} select={this.select} selectedAccounts={this.getSelectedAccounts}/>\r\n            case \"Confirm Unlink Account\": return <UnlinkAccountConfirmMenu changeSubmenuState={this.props.changeSubmenuState} selectedAccounts={this.getSelectedAccounts()} />\r\n            case \"Delete User\": return <DeleteAccountConfirmMenu changeSubmenuState={this.props.changeSubmenuState} />\r\n            case \"Cancel\": return <SettingsMenu changeSubmenuState={this.props.changeSubmenuState} />\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let linkedAccountsHelper = this.props.twitter_accounts.map((twitterAccount) => { return ({ account_id: twitterAccount.account_id, selected: false }); });\r\n        this.setState({ linkedAccounts: linkedAccountsHelper });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (           \r\n            <div className=\"Submenu\">\r\n                {this.manageSubmenuState()}                \r\n            </div>         \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Submenu;"]},"metadata":{},"sourceType":"module"}