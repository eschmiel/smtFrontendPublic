{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\repos\\\\streamToggle\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import'../../css/tweets/TweetEdit.css';import TweetTitleForm from'./tweetTitleform';import TwitterAccountForm from'./twitterAccountForm';import TweetTextForm from'./tweetTextForm.js';import TweetEditMenu from'./tweetEditMenu.js';var TweetForm=/*#__PURE__*/function(_React$Component){_inherits(TweetForm,_React$Component);var _super=_createSuper(TweetForm);function TweetForm(props){var _this;_classCallCheck(this,TweetForm);_this=_super.call(this,props);var defaultTweetValues={tweet_title:'',tweet_text:'',account_id:props.formOptions.twitterAccounts[0].account_id};var defaultFormOptions={tweet:{},addedSubmitData:{},submitRequestUrl:'/',handlePostSubmit:function handlePostSubmit(){},onCancel:function onCancel(){}};_this.state={formData:Object.assign(defaultTweetValues,props.formOptions.tweet),formOptions:Object.assign(defaultFormOptions,props.formOptions)};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(TweetForm,[{key:\"handleChange\",value:function handleChange(event){this.formEdits=Object.assign({},this.state.formData);this.propertyEdit=event.target.type;switch(this.propertyEdit){case'text':this.formEdits.tweet_title=event.target.value;break;case'select-one':this.formEdits.account_id=event.target.value;break;case'textarea':this.formEdits.tweet_text=event.target.value;break;default:console.log(\"Attempted to change a property that is not a tweet edit form field\");break;}this.setState({formData:Object.assign({},this.formEdits)});}},{key:\"handleSubmit\",value:function(){var _handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var newTweetData,_i,_Object$entries,_Object$entries$_i,key,value,requestUrl,request,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://We have to use a custom submit handler because the post_id wouldn't be included in the form data. \n//We also collect the edited tweet in the database in the http response and refresh the tweets in our REACT state to reflect the new state of the database\nevent.preventDefault();newTweetData=new FormData();newTweetData.append(\"account_id\",this.state.formData.account_id);newTweetData.append(\"tweet_title\",this.state.formData.tweet_title);newTweetData.append(\"tweet_text\",this.state.formData.tweet_text);for(_i=0,_Object$entries=Object.entries(this.state.formOptions.addedSubmitData);_i<_Object$entries.length;_i++){_Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];newTweetData.append(key,value);}requestUrl=this.state.formOptions.submitRequestUrl;request=new Request(requestUrl,{method:'POST',body:newTweetData});_context.next=10;return fetch(request);case 10:res=_context.sent;this.state.formOptions.handlePostSubmit(res);case 12:case\"end\":return _context.stop();}}},_callee,this);}));function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}return handleSubmit;}()},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit,className:\"Tweet\"},/*#__PURE__*/React.createElement(\"div\",{className:\"TweetHeader\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Toggle\"}),/*#__PURE__*/React.createElement(TweetTitleForm,{tweet_title:this.state.formData.tweet_title,handleChange:this.handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"TweetContent\"},/*#__PURE__*/React.createElement(TwitterAccountForm,{account_id:this.state.formData.account_id,twitterAccounts:this.state.formOptions.twitterAccounts,handleChange:this.handleChange}),/*#__PURE__*/React.createElement(TweetTextForm,{tweet_text:this.state.formData.tweet_text,handleChange:this.handleChange}),/*#__PURE__*/React.createElement(TweetEditMenu,{onChangeTweetState:this.state.formOptions.onCancel})));}}]);return TweetForm;}(React.Component);export default TweetForm;","map":{"version":3,"sources":["C:/repos/streamToggle/frontend/src/components/tweets/tweetForm.js"],"names":["React","TweetTitleForm","TwitterAccountForm","TweetTextForm","TweetEditMenu","TweetForm","props","defaultTweetValues","tweet_title","tweet_text","account_id","formOptions","twitterAccounts","defaultFormOptions","tweet","addedSubmitData","submitRequestUrl","handlePostSubmit","onCancel","state","formData","Object","assign","handleChange","bind","handleSubmit","event","formEdits","propertyEdit","target","type","value","console","log","setState","preventDefault","newTweetData","FormData","append","entries","key","requestUrl","request","Request","method","body","fetch","res","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../css/tweets/TweetEdit.css';\r\nimport TweetTitleForm from './tweetTitleform';\r\nimport TwitterAccountForm from './twitterAccountForm';\r\nimport TweetTextForm from './tweetTextForm.js';\r\nimport TweetEditMenu from './tweetEditMenu.js';\r\n\r\n\r\nclass TweetForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let defaultTweetValues = { tweet_title: '', tweet_text: '', account_id: props.formOptions.twitterAccounts[0].account_id};\r\n        let defaultFormOptions = {\r\n            tweet: {},\r\n            addedSubmitData: {},\r\n            submitRequestUrl: '/',\r\n            handlePostSubmit: () => { },\r\n            onCancel: () => { }\r\n        };\r\n\r\n        this.state = {\r\n            formData: Object.assign(defaultTweetValues, props.formOptions.tweet),\r\n            formOptions: Object.assign(defaultFormOptions, props.formOptions)\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {      \r\n        this.formEdits = Object.assign({}, this.state.formData);\r\n\r\n        this.propertyEdit = event.target.type;\r\n\r\n        switch (this.propertyEdit) {\r\n\r\n            case 'text':\r\n                this.formEdits.tweet_title = event.target.value;\r\n                break;\r\n\r\n            case 'select-one':\r\n                this.formEdits.account_id = event.target.value;\r\n                break;\r\n\r\n            case 'textarea':\r\n                this.formEdits.tweet_text = event.target.value;\r\n                break;\r\n\r\n            default:\r\n                console.log(\"Attempted to change a property that is not a tweet edit form field\");\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            formData: Object.assign({}, this.formEdits)\r\n        });\r\n    }\r\n\r\n\r\n    async handleSubmit(event) { //We have to use a custom submit handler because the post_id wouldn't be included in the form data. \r\n                                //We also collect the edited tweet in the database in the http response and refresh the tweets in our REACT state to reflect the new state of the database\r\n        event.preventDefault();\r\n        \r\n        let newTweetData = new FormData();\r\n\r\n        newTweetData.append(\"account_id\", this.state.formData.account_id);\r\n        newTweetData.append(\"tweet_title\", this.state.formData.tweet_title);\r\n        newTweetData.append(\"tweet_text\", this.state.formData.tweet_text);\r\n\r\n        for (const [key, value] of Object.entries(this.state.formOptions.addedSubmitData)) {\r\n            newTweetData.append(key, value);\r\n        }       \r\n\r\n        let requestUrl = this.state.formOptions.submitRequestUrl;\r\n\r\n        let request = new Request(requestUrl,\r\n            {\r\n                method: 'POST',\r\n                body: newTweetData\r\n            });\r\n\r\n        let res = await fetch(request);\r\n\r\n        this.state.formOptions.handlePostSubmit(res);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"Tweet\">\r\n                <div className=\"TweetHeader\">\r\n                    <div className=\"Toggle\" />\r\n                    <TweetTitleForm tweet_title={this.state.formData.tweet_title} handleChange={this.handleChange} />\r\n                </div>\r\n\r\n                <div className=\"TweetContent\">\r\n                    <TwitterAccountForm account_id={this.state.formData.account_id} twitterAccounts={this.state.formOptions.twitterAccounts} handleChange={this.handleChange} />\r\n                    <TweetTextForm tweet_text={this.state.formData.tweet_text} handleChange={this.handleChange} />\r\n                    <TweetEditMenu onChangeTweetState={this.state.formOptions.onCancel} />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetForm;"]},"metadata":{},"sourceType":"module"}