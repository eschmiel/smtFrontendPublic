{"ast":null,"code":"var _jsxFileName = \"c:\\\\repos\\\\smtFrontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport NotLoggedIn from './components/notLoggedIn.js';\nimport LoggedIn from './components/loggedIn';\nimport './css/MainCSS.css';\nimport SecurityWarning from './components/securityWarning.js';\nimport Utilities from './utilities.js';\nimport envTest from \"./configs/mainConfig\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setUsername = this.setUsername.bind(this);\n    this.state = {\n      username: Utilities.getCookie('username')\n    };\n    envTest();\n  }\n\n  setUsername(newUsername) {\n    this.setState({\n      username: newUsername\n    });\n    document.cookie = \"username=\" + newUsername;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, this.state.username ? /*#__PURE__*/React.createElement(LoggedIn, {\n      username: this.state.username,\n      onLogout: this.setUsername,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(NotLoggedIn, {\n      onLogin: this.setUsername,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 114\n      }\n    }), /*#__PURE__*/React.createElement(SecurityWarning, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n/*\r\nfunction getCookie(cookieName) {\r\n    let cookies = document.cookie;\r\n\r\n    if (cookies) {\r\n        let desiredCookie = cookies.split('; ').find(cookie => cookie.startsWith(cookieName));\r\n        let cookieValue = desiredCookie.split('=')[1];\r\n\r\n        //Add error handling for if cookie doesn't exist later\r\n\r\n        return cookieValue;\r\n    }\r\n}*/\n\n\nexport default App;","map":{"version":3,"sources":["c:/repos/smtFrontend/src/App.js"],"names":["React","NotLoggedIn","LoggedIn","SecurityWarning","Utilities","envTest","App","Component","constructor","props","setUsername","bind","state","username","getCookie","newUsername","setState","document","cookie","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,mBAAP;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAET,SAAS,CAACU,SAAV,CAAoB,UAApB;AADD,KAAb;AAIAT,IAAAA,OAAO;AACV;;AAEDK,EAAAA,WAAW,CAACK,WAAD,EAAc;AACrB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAEE;AAAZ,KAAd;AAEAE,IAAAA,QAAQ,CAACC,MAAT,GAAkB,cAAcH,WAAhC;AAEH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,KAAL,CAAWC,QAAX,gBAAsB,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAA/B;AAAyC,MAAA,QAAQ,EAAE,KAAKH,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,gBAAgG,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKA,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrG,eAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA3B6B;AA8BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,GAAf","sourcesContent":["import React from 'react';\r\nimport NotLoggedIn from './components/notLoggedIn.js';\r\nimport LoggedIn from './components/loggedIn';\r\nimport './css/MainCSS.css';\r\nimport SecurityWarning from './components/securityWarning.js';\r\nimport Utilities from './utilities.js';\r\nimport envTest from '~/configs/mainConfig';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setUsername = this.setUsername.bind(this);\r\n\r\n        this.state = {\r\n            username: Utilities.getCookie('username')\r\n        };\r\n\r\n        envTest();\r\n    }\r\n\r\n    setUsername(newUsername) {\r\n        this.setState({ username: newUsername });\r\n\r\n        document.cookie = \"username=\" + newUsername;\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.username ? <LoggedIn username={this.state.username} onLogout={this.setUsername} /> : <NotLoggedIn onLogin={this.setUsername} />}\r\n                <SecurityWarning />\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\n/*\r\nfunction getCookie(cookieName) {\r\n    let cookies = document.cookie;\r\n\r\n    if (cookies) {\r\n        let desiredCookie = cookies.split('; ').find(cookie => cookie.startsWith(cookieName));\r\n        let cookieValue = desiredCookie.split('=')[1];\r\n\r\n        //Add error handling for if cookie doesn't exist later\r\n\r\n        return cookieValue;\r\n    }\r\n}*/\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}