{"ast":null,"code":"import { endPoints } from \"../../configs/mainConfig.js\";\n\nfunction TwitterAccountMessenger() {}\n\n_c = TwitterAccountMessenger;\n\nTwitterAccountMessenger.prototype.getLinkedAccounts = function () {\n  fetch(endPoints.getLinkedAccounts, {\n    method: 'GET',\n    credentials: 'include'\n  }).then(response => response.json()).then(data => this.setState({\n    twitterAccounts: data\n  }));\n};\n\nTwitterAccountMessenger.prototype.linkTwitterAccount = async function () {\n  let response = await fetch(endPoints.linkTwitterAccount, {\n    method: 'GET',\n    credentials: 'include'\n  });\n  let authorizationLink = await response.text();\n  return authorizationLink;\n};\n\nTwitterAccountMessenger.prototype.unlinkTwitterAccounts = async function (requestData) {\n  let unlinkRequest = new Request(endPoints.unlinkTwitterAccount, {\n    method: 'POST',\n    credentials: 'include',\n    body: requestData\n  });\n  await fetch(unlinkRequest);\n};\n\nexport default new TwitterAccountMessenger();\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterAccountMessenger\");","map":{"version":3,"sources":["c:/repos/smtFrontend/src/services/messenger/twitterAccountMessenger.js"],"names":["endPoints","TwitterAccountMessenger","prototype","getLinkedAccounts","fetch","method","credentials","then","response","json","data","setState","twitterAccounts","linkTwitterAccount","authorizationLink","text","unlinkTwitterAccounts","requestData","unlinkRequest","Request","unlinkTwitterAccount","body"],"mappings":"AAAA,SAASA,SAAT,QAA0B,6BAA1B;;AAGA,SAASC,uBAAT,GAAmC,CAAG;;KAA7BA,uB;;AAGTA,uBAAuB,CAACC,SAAxB,CAAkCC,iBAAlC,GAAsD,YAAY;AAC9DC,EAAAA,KAAK,CAACJ,SAAS,CAACG,iBAAX,EAA8B;AAAEE,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,WAAW,EAAE;AAA9B,GAA9B,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,IAAAA,eAAe,EAAEF;AAAnB,GAAd,CAFlB;AAGH,CAJD;;AAOAT,uBAAuB,CAACC,SAAxB,CAAkCW,kBAAlC,GAAuD,kBAAkB;AACrE,MAAIL,QAAQ,GAAG,MAAMJ,KAAK,CAACJ,SAAS,CAACa,kBAAX,EAA+B;AAAER,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,WAAW,EAAE;AAA9B,GAA/B,CAA1B;AACA,MAAIQ,iBAAiB,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA9B;AACA,SAAOD,iBAAP;AACH,CAJD;;AAOAb,uBAAuB,CAACC,SAAxB,CAAkCc,qBAAlC,GAA0D,gBAAgBC,WAAhB,EAA6B;AACnF,MAAIC,aAAa,GAAG,IAAIC,OAAJ,CAAYnB,SAAS,CAACoB,oBAAtB,EAChB;AACIf,IAAAA,MAAM,EAAE,MADZ;AAEIC,IAAAA,WAAW,EAAE,SAFjB;AAGIe,IAAAA,IAAI,EAAEJ;AAHV,GADgB,CAApB;AAOA,QAAMb,KAAK,CAACc,aAAD,CAAX;AACH,CATD;;AAYA,eAAe,IAAIjB,uBAAJ,EAAf","sourcesContent":["import { endPoints } from '~/configs/mainConfig.js';\r\n\r\n\r\nfunction TwitterAccountMessenger() { }\r\n\r\n\r\nTwitterAccountMessenger.prototype.getLinkedAccounts = function () {\r\n    fetch(endPoints.getLinkedAccounts, { method: 'GET', credentials: 'include' })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ twitterAccounts: data }));\r\n};\r\n\r\n\r\nTwitterAccountMessenger.prototype.linkTwitterAccount = async function () {\r\n    let response = await fetch(endPoints.linkTwitterAccount, { method: 'GET', credentials: 'include' });\r\n    let authorizationLink = await response.text();\r\n    return authorizationLink;\r\n};\r\n\r\n\r\nTwitterAccountMessenger.prototype.unlinkTwitterAccounts = async function (requestData) {\r\n    let unlinkRequest = new Request(endPoints.unlinkTwitterAccount,\r\n        {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            body: requestData\r\n        });\r\n\r\n    await fetch(unlinkRequest);\r\n};\r\n\r\n\r\nexport default new TwitterAccountMessenger();"]},"metadata":{},"sourceType":"module"}