{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\streamToggle\\\\frontend\\\\src\\\\components\\\\tweets\\\\tweetForm.js\";\nimport React from 'react';\nimport '../../css/tweets/TweetEdit.css';\nimport TweetTitleForm from './tweetTitleform';\nimport TwitterAccountForm from './twitterAccountForm';\nimport TweetTextForm from './tweetTextForm.js';\nimport TweetEditMenu from './tweetEditMenu.js';\n\nclass TweetForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: Object.assign({}, this.props.formOptions.tweet)\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.formEdits = Object.assign({}, this.state.formData);\n    this.propertyEdit = event.target.type;\n\n    switch (this.propertyEdit) {\n      case 'text':\n        this.formEdits.tweet_title = event.target.value;\n        break;\n\n      case 'select-one':\n        this.formEdits.account_id = event.target.value;\n        break;\n\n      case 'textarea':\n        this.formEdits.tweet_text = event.target.value;\n        break;\n    }\n\n    this.setState({\n      formData: Object.assign({}, this.formEdits)\n    });\n  }\n\n  async handleSubmit(event) {\n    //We have to use a custom submit handler because the post_id wouldn't be included in the form data. \n    //We also collect the edited tweet in the database in the http response and refresh the tweets in our REACT state to reflect the new state of the database\n    event.preventDefault();\n    let newTweetData = new FormData();\n    newTweetData.append(\"account_id\", this.state.formData.account_id);\n    newTweetData.append(\"tweet_title\", this.state.formData.tweet_title);\n    newTweetData.append(\"tweet_text\", this.state.formData.tweet_text);\n\n    for (const [key, value] of Object.entries(this.props.formOptions.addedSubmitData)) {\n      newTweetData.append(key, value);\n    }\n\n    let requestUrl = this.props.formOptions.submitRequestUrl;\n    let request = new Request(requestUrl, {\n      method: 'POST',\n      body: newTweetData\n    });\n\n    for (var pair of newTweetData.entries()) {\n      console.log(pair[0] + pair[1]);\n    }\n\n    let res = await fetch(request);\n    this.props.formOptions.handlePostSubmit(res);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TweetHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TweetTitleForm, {\n      tweet_title: this.state.formData.tweet_title,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TweetContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TwitterAccountForm, {\n      account_id: this.state.formData.account_id,\n      twitterAccounts: this.props.formOptions.twitterAccounts,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TweetTextForm, {\n      tweet_text: this.state.formData.tweet_text,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TweetEditMenu, {\n      onChangeTweetState: this.props.formOptions.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default TweetForm;","map":{"version":3,"sources":["C:/repos/streamToggle/frontend/src/components/tweets/tweetForm.js"],"names":["React","TweetTitleForm","TwitterAccountForm","TweetTextForm","TweetEditMenu","TweetForm","Component","constructor","props","state","formData","Object","assign","formOptions","tweet","handleChange","bind","handleSubmit","event","formEdits","propertyEdit","target","type","tweet_title","value","account_id","tweet_text","setState","preventDefault","newTweetData","FormData","append","key","entries","addedSubmitData","requestUrl","submitRequestUrl","request","Request","method","body","pair","console","log","res","fetch","handlePostSubmit","render","twitterAccounts","onCancel"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../css/tweets/TweetEdit.css';\r\nimport TweetTitleForm from './tweetTitleform';\r\nimport TwitterAccountForm from './twitterAccountForm';\r\nimport TweetTextForm from './tweetTextForm.js';\r\nimport TweetEditMenu from './tweetEditMenu.js';\r\n\r\n\r\nclass TweetForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formData: Object.assign({}, this.props.formOptions.tweet)\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {      \r\n        this.formEdits = Object.assign({}, this.state.formData);\r\n\r\n        this.propertyEdit = event.target.type;\r\n\r\n        switch (this.propertyEdit) {\r\n\r\n            case 'text':\r\n                this.formEdits.tweet_title = event.target.value;\r\n                break;\r\n\r\n            case 'select-one':\r\n                this.formEdits.account_id = event.target.value;\r\n                break;\r\n\r\n            case 'textarea':\r\n                this.formEdits.tweet_text = event.target.value;\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            formData: Object.assign({}, this.formEdits)\r\n        });\r\n    }\r\n\r\n\r\n    async handleSubmit(event) { //We have to use a custom submit handler because the post_id wouldn't be included in the form data. \r\n                                //We also collect the edited tweet in the database in the http response and refresh the tweets in our REACT state to reflect the new state of the database\r\n        event.preventDefault();\r\n        \r\n        let newTweetData = new FormData();\r\n\r\n        newTweetData.append(\"account_id\", this.state.formData.account_id);\r\n        newTweetData.append(\"tweet_title\", this.state.formData.tweet_title);\r\n        newTweetData.append(\"tweet_text\", this.state.formData.tweet_text);\r\n\r\n        for (const [key, value] of Object.entries(this.props.formOptions.addedSubmitData)) {\r\n            newTweetData.append(key, value);\r\n        }       \r\n\r\n        let requestUrl = this.props.formOptions.submitRequestUrl;\r\n\r\n        let request = new Request(requestUrl,\r\n            {\r\n                method: 'POST',\r\n                body: newTweetData\r\n            });\r\n\r\n        for (var pair of newTweetData.entries()) {\r\n            console.log(pair[0] + pair[1]);\r\n        }\r\n\r\n        let res = await fetch(request);\r\n\r\n        this.props.formOptions.handlePostSubmit(res);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"TweetHeader\">\r\n                    <div className=\"Toggle\">\r\n                    </div>\r\n                    <TweetTitleForm tweet_title={this.state.formData.tweet_title} handleChange={this.handleChange} />\r\n                </div>\r\n\r\n                <div className=\"TweetContent\">\r\n\r\n                    <TwitterAccountForm account_id={this.state.formData.account_id} twitterAccounts={this.props.formOptions.twitterAccounts} handleChange={this.handleChange} />\r\n                    <TweetTextForm tweet_text={this.state.formData.tweet_text} handleChange={this.handleChange} />\r\n                    <TweetEditMenu onChangeTweetState={this.props.formOptions.onCancel} />\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetForm;"]},"metadata":{},"sourceType":"module"}