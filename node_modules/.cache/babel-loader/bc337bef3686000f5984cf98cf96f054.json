{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\streamToggle\\\\frontend\\\\src\\\\components\\\\submenu\\\\submenu.js\";\nimport React from 'react';\nimport '../../css/submenu/Submenu.css';\nimport SettingsMenu from './settingsMenu.js';\nimport LinkedAccountsMenu from './linkedAccountsMenu.js';\nimport UnlinkAccountsMenu from './unlinkAccountsMenu.js';\nimport DeleteAccountConfirmMenu from './deleteAccountConfirmMenu.js';\nimport UnlinkAccountConfirmMenu from './unlinkAccountConfirmMenu.js';\n\nclass Submenu extends React.Component {\n  constructor(props) {\n    super(props);\n    let linkedAccountsHelper = this.props.twitter_accounts.map(twitterAccount => {\n      return {\n        account_id: twitterAccount.account_id,\n        selected: false\n      };\n    });\n    this.state = {\n      linkedAccounts: linkedAccountsHelper\n    };\n    this.select = this.select.bind(this);\n    this.manageSubmenuState = this.manageSubmenuState.bind(this);\n    this.getSelectedAccounts = this.getSelectedAccounts.bind(this);\n  }\n\n  select(account_id) {\n    let indexOfSelected = this.state.linkedAccounts.findIndex(account => account.account_id === account_id);\n    let editedLinkedAccounts = this.state.linkedAccounts.map((account, index) => {\n      if (index === indexOfSelected) {\n        account.selected = !account.selected;\n      }\n\n      return account;\n    });\n    this.setState({\n      linkedAccounts: editedLinkedAccounts\n    });\n  }\n\n  getSelectedAccounts() {\n    let selectedAccounts = this.state.linkedAccounts.filter(account => account.selected);\n    return selectedAccounts;\n  }\n\n  manageSubmenuState() {\n    switch (this.props.currentState) {\n      case 'Settings':\n        return /*#__PURE__*/React.createElement(SettingsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }\n        });\n\n      case \"Linked Accounts\":\n        return /*#__PURE__*/React.createElement(LinkedAccountsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 44\n          }\n        });\n\n      case \"Unlink Account\":\n        return /*#__PURE__*/React.createElement(UnlinkAccountsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          linkedAccounts: this.state.linkedAccounts,\n          select: this.select,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 43\n          }\n        });\n\n      case \"Confirm Unlink Account\":\n        return /*#__PURE__*/React.createElement(UnlinkAccountConfirmMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          selectedAccounts: this.getSelectedAccounts,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 51\n          }\n        });\n\n      case \"Delete User\":\n        return /*#__PURE__*/React.createElement(DeleteAccountConfirmMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 40\n          }\n        });\n\n      case \"Cancel\":\n        return /*#__PURE__*/React.createElement(SettingsMenu, {\n          changeSubmenuState: this.props.changeSubmenuState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 35\n          }\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Submenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, this.manageSubmenuState());\n  }\n\n}\n\nexport default Submenu;","map":{"version":3,"sources":["C:/repos/streamToggle/frontend/src/components/submenu/submenu.js"],"names":["React","SettingsMenu","LinkedAccountsMenu","UnlinkAccountsMenu","DeleteAccountConfirmMenu","UnlinkAccountConfirmMenu","Submenu","Component","constructor","props","linkedAccountsHelper","twitter_accounts","map","twitterAccount","account_id","selected","state","linkedAccounts","select","bind","manageSubmenuState","getSelectedAccounts","indexOfSelected","findIndex","account","editedLinkedAccounts","index","setState","selectedAccounts","filter","currentState","changeSubmenuState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../css/submenu/Submenu.css';\r\nimport SettingsMenu from './settingsMenu.js'\r\nimport LinkedAccountsMenu from './linkedAccountsMenu.js'\r\nimport UnlinkAccountsMenu from './unlinkAccountsMenu.js';\r\nimport DeleteAccountConfirmMenu from './deleteAccountConfirmMenu.js';\r\nimport UnlinkAccountConfirmMenu from './unlinkAccountConfirmMenu.js';\r\n\r\nclass Submenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let linkedAccountsHelper = this.props.twitter_accounts.map((twitterAccount) => { return { account_id: twitterAccount.account_id, selected: false } });\r\n\r\n        this.state = { linkedAccounts: linkedAccountsHelper }\r\n\r\n        this.select = this.select.bind(this);\r\n        this.manageSubmenuState = this.manageSubmenuState.bind(this);\r\n        this.getSelectedAccounts = this.getSelectedAccounts.bind(this);\r\n    }\r\n\r\n\r\n    select(account_id) {\r\n        let indexOfSelected = this.state.linkedAccounts.findIndex((account) => account.account_id === account_id);\r\n\r\n        let editedLinkedAccounts = this.state.linkedAccounts.map((account, index) => { if (index === indexOfSelected) { account.selected = !account.selected; } return account; });\r\n\r\n        this.setState({ linkedAccounts: editedLinkedAccounts });\r\n    }\r\n\r\n\r\n    getSelectedAccounts() {\r\n        let selectedAccounts = this.state.linkedAccounts.filter((account) => account.selected);\r\n\r\n        return selectedAccounts;\r\n    }\r\n\r\n\r\n    manageSubmenuState() {\r\n        switch (this.props.currentState) {\r\n            case 'Settings': return <SettingsMenu changeSubmenuState={this.props.changeSubmenuState} />\r\n            case \"Linked Accounts\": return <LinkedAccountsMenu changeSubmenuState={this.props.changeSubmenuState} /> \r\n            case \"Unlink Account\": return <UnlinkAccountsMenu changeSubmenuState={this.props.changeSubmenuState} linkedAccounts={this.state.linkedAccounts} select={this.select} />\r\n            case \"Confirm Unlink Account\": return <UnlinkAccountConfirmMenu changeSubmenuState={this.props.changeSubmenuState} selectedAccounts={this.getSelectedAccounts} />\r\n            case \"Delete User\": return <DeleteAccountConfirmMenu changeSubmenuState={this.props.changeSubmenuState} />\r\n            case \"Cancel\": return <SettingsMenu changeSubmenuState={this.props.changeSubmenuState} />\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (           \r\n            <div className=\"Submenu\">\r\n                {this.manageSubmenuState()}                \r\n            </div>         \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Submenu;"]},"metadata":{},"sourceType":"module"}