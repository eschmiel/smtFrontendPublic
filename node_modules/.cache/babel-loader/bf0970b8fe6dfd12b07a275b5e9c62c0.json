{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\streamToggle\\\\frontend\\\\src\\\\components\\\\submenu\\\\unlinkAccountMenu\\\\unlinkAccountMenu.js\";\nimport React from 'react';\nimport '../../../css/submenu/UnlinkAccountsMenu.css';\nimport UnlinkAccountConfirmMenu from './unlinkAccountConfirmMenu.js';\nimport UnlinkAccountSelectMenu from './unlinkAccountSelectMenu.js';\n\nclass UnlinkAccountsMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    let unlinkAccountMenuItemsHelper = props.linkedAccounts.map(twitterAccount => {\n      return {\n        account_id: twitterAccount.account_id,\n        screen_name: twitterAccount.screen_name,\n        selected: false\n      };\n    });\n    this.state = {\n      menuState: 'Select',\n      unlinkAccountMenuItems: unlinkAccountMenuItemsHelper\n    };\n    this.changeMenuState = this.changeMenuState.bind(this);\n    this.handleSelectMenuConfirm = this.handleSelectMenuConfirm.bind(this);\n    this.select = this.select.bind(this);\n    this.getSelectedAccounts = this.getSelectedAccounts.bind(this);\n    this.unlinkAccount = this.unlinkAccount.bind(this);\n  }\n\n  changeMenuState(event) {\n    this.setState({\n      menuState: event.target.id\n    });\n  }\n\n  handleSelectMenuConfirm(event) {\n    if (this.getSelectedAccounts().length) this.changeMenuState(event);\n  }\n\n  select(account_id) {\n    let indexOfSelected = this.state.unlinkAccountMenuItems.findIndex(account => account.account_id === account_id);\n    let unlinkAccountMenuItemsEdits = this.state.unlinkAccountMenuItems.map((account, index) => {\n      if (index === indexOfSelected) {\n        account.selected = !account.selected;\n      }\n\n      return account;\n    });\n    this.setState({\n      unlinkAccountMenuItems: unlinkAccountMenuItemsEdits\n    });\n  }\n\n  getSelectedAccounts() {\n    let selectedAccounts = this.state.unlinkAccountMenuItems.filter(account => account.selected);\n    return selectedAccounts;\n  }\n\n  async unlinkAccount() {\n    const requestUrl = '/unlinkTwitterAccount';\n    let requestData = new FormData();\n    let selectedAccounts = this.getSelectedAccounts();\n    selectedAccounts.forEach(account => requestData.append('account_id[]', account.account_id));\n    let unlinkRequest = new Request(requestUrl, {\n      method: 'POST',\n      body: requestData\n    });\n    await fetch(unlinkRequest);\n    this.props.refreshLinkedAccounts();\n    this.props.refreshTweets();\n    this.props.changeSubmenuState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, this.state.menuState === 'Select' ? /*#__PURE__*/React.createElement(UnlinkAccountSelectMenu, {\n      unlinkAccountMenuItems: this.state.unlinkAccountMenuItems,\n      onSelect: this.select,\n      onConfirm: this.handleSelectMenuConfirm,\n      onCancel: this.props.changeSubmenuState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 54\n      }\n    }) : this.state.menuState === 'Confirm' ? /*#__PURE__*/React.createElement(UnlinkAccountConfirmMenu, {\n      selectedAccounts: this.getSelectedAccounts(),\n      onCancel: this.changeMenuState,\n      onConfirm: this.unlinkAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 60\n      }\n    }) : '');\n  }\n\n}\n\nexport default UnlinkAccountsMenu;","map":{"version":3,"sources":["C:/repos/streamToggle/frontend/src/components/submenu/unlinkAccountMenu/unlinkAccountMenu.js"],"names":["React","UnlinkAccountConfirmMenu","UnlinkAccountSelectMenu","UnlinkAccountsMenu","Component","constructor","props","unlinkAccountMenuItemsHelper","linkedAccounts","map","twitterAccount","account_id","screen_name","selected","state","menuState","unlinkAccountMenuItems","changeMenuState","bind","handleSelectMenuConfirm","select","getSelectedAccounts","unlinkAccount","event","setState","target","id","length","indexOfSelected","findIndex","account","unlinkAccountMenuItemsEdits","index","selectedAccounts","filter","requestUrl","requestData","FormData","forEach","append","unlinkRequest","Request","method","body","fetch","refreshLinkedAccounts","refreshTweets","changeSubmenuState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../../css/submenu/UnlinkAccountsMenu.css';\r\nimport UnlinkAccountConfirmMenu from './unlinkAccountConfirmMenu.js';\r\nimport UnlinkAccountSelectMenu from './unlinkAccountSelectMenu.js';\r\n\r\nclass UnlinkAccountsMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let unlinkAccountMenuItemsHelper = props.linkedAccounts.map((twitterAccount) => { return { account_id: twitterAccount.account_id, screen_name: twitterAccount.screen_name, selected: false } })\r\n\r\n        this.state = {\r\n            menuState: 'Select',\r\n            unlinkAccountMenuItems: unlinkAccountMenuItemsHelper\r\n        };\r\n\r\n        this.changeMenuState = this.changeMenuState.bind(this);\r\n        this.handleSelectMenuConfirm = this.handleSelectMenuConfirm.bind(this);\r\n        this.select = this.select.bind(this);\r\n        this.getSelectedAccounts = this.getSelectedAccounts.bind(this);\r\n        this.unlinkAccount = this.unlinkAccount.bind(this);\r\n    }\r\n\r\n\r\n    changeMenuState(event) {\r\n        this.setState({ menuState: event.target.id });\r\n    }\r\n\r\n\r\n    handleSelectMenuConfirm(event) {\r\n        if (this.getSelectedAccounts().length) this.changeMenuState(event);\r\n    }\r\n\r\n\r\n    select(account_id) {\r\n        let indexOfSelected = this.state.unlinkAccountMenuItems.findIndex((account) => account.account_id === account_id);\r\n\r\n        let unlinkAccountMenuItemsEdits = this.state.unlinkAccountMenuItems.map((account, index) => {\r\n            if (index === indexOfSelected) { account.selected = !account.selected; }\r\n            return account;\r\n        });\r\n\r\n        this.setState({ unlinkAccountMenuItems: unlinkAccountMenuItemsEdits });\r\n    }\r\n\r\n\r\n    getSelectedAccounts() {\r\n        let selectedAccounts = this.state.unlinkAccountMenuItems.filter((account) => account.selected);\r\n\r\n        return selectedAccounts;\r\n    }\r\n\r\n\r\n    async unlinkAccount() {\r\n        const requestUrl = '/unlinkTwitterAccount';\r\n        let requestData = new FormData();\r\n        let selectedAccounts = this.getSelectedAccounts();\r\n\r\n        selectedAccounts.forEach(account => requestData.append('account_id[]', account.account_id));\r\n\r\n        let unlinkRequest = new Request(requestUrl,\r\n            {\r\n                method: 'POST',\r\n                body: requestData\r\n            });\r\n\r\n        await fetch(unlinkRequest);\r\n\r\n        this.props.refreshLinkedAccounts();\r\n        this.props.refreshTweets();       \r\n        this.props.changeSubmenuState();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.menuState === 'Select' ? <UnlinkAccountSelectMenu unlinkAccountMenuItems={this.state.unlinkAccountMenuItems}\r\n                    onSelect={this.select} onConfirm={this.handleSelectMenuConfirm} onCancel={this.props.changeSubmenuState} />\r\n                    : this.state.menuState === 'Confirm' ? <UnlinkAccountConfirmMenu selectedAccounts={this.getSelectedAccounts()} onCancel={this.changeMenuState} onConfirm={this.unlinkAccount}/> \r\n                :''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UnlinkAccountsMenu;"]},"metadata":{},"sourceType":"module"}