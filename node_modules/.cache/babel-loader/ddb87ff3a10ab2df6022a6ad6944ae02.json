{"ast":null,"code":"import _classCallCheck from\"C:/repos/streamToggle/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/repos/streamToggle/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/repos/streamToggle/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/repos/streamToggle/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/repos/streamToggle/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import LinkFirstAccount from'./linkFirstAccount.js';import FirstTweet from'./firstTweet.js';import Menu from'./menu.js';import Tweet from'./tweets/tweet.js';import NewTweet from'./tweets/newTweet.js';var clone=require('rfdc')();var LoggedIn=/*#__PURE__*/function(_React$Component){_inherits(LoggedIn,_React$Component);var _super=_createSuper(LoggedIn);function LoggedIn(props){var _this;_classCallCheck(this,LoggedIn);_this=_super.call(this,props);_this.state={tweets:[],twitterAccounts:[]};_this.getLinkedAccounts=_this.getLinkedAccounts.bind(_assertThisInitialized(_this));_this.getTweets=_this.getTweets.bind(_assertThisInitialized(_this));_this.refreshTweet=_this.refreshTweet.bind(_assertThisInitialized(_this));_this.buildTweetComponents=_this.buildTweetComponents.bind(_assertThisInitialized(_this));return _this;}_createClass(LoggedIn,[{key:\"componentDidMount\",value:function componentDidMount(){this.getTweets();this.getLinkedAccounts();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"Menubar\"},/*#__PURE__*/React.createElement(\"img\",{src:\"./images/smt-logo.png\",alt:\"Social Media Toggle by Schmiel logo\",className:\"logo\"}),/*#__PURE__*/React.createElement(Menu,{onLogout:this.props.onLogout,twitter_accounts:this.state.twitterAccounts,refreshLinkedAccounts:this.getLinkedAccounts,refreshTweets:this.getTweets,username:this.props.username})),this.state.twitterAccounts.length===0?/*#__PURE__*/React.createElement(LinkFirstAccount,null):this.state.tweets.length===0?/*#__PURE__*/React.createElement(FirstTweet,{username:this.props.username,updateTweets:this.getTweets,twitterAccounts:this.state.twitterAccounts}):/*#__PURE__*/React.createElement(\"div\",{id:\"TweetsContainer\"},this.buildTweetComponents(this.state.tweets),/*#__PURE__*/React.createElement(NewTweet,{username:this.props.username,updateTweets:this.getTweets,twitterAccounts:this.state.twitterAccounts})));}},{key:\"buildTweetComponents\",value:function buildTweetComponents(tweetObjs){var _this2=this;var tweetComponents=tweetObjs.map(function(tweet,index){return/*#__PURE__*/React.createElement(Tweet,{tweet:tweet,twitterAccounts:_this2.state.twitterAccounts,refreshTweet:_this2.refreshTweet,updateTweets:_this2.getTweets});});return tweetComponents;}},{key:\"refreshTweet\",value:function refreshTweet(currentTweet){var index=this.state.tweets.findIndex(function(element){return element.post_id===currentTweet.post_id;});if(index!==-1){var editsContainer=clone(this.state.tweets);editsContainer[index]=clone(currentTweet);this.setState({tweets:editsContainer});}}},{key:\"getTweets\",value:function getTweets(){var _this3=this;fetch('http://streamtoggle-backend.herokuapp.com/tweet/getUserTweets').then(function(response){return response.json();}).then(function(data){return _this3.setState({tweets:data});});}},{key:\"getLinkedAccounts\",value:function getLinkedAccounts(){var _this4=this;fetch('http://streamtoggle-backend.herokuapp.com/account/getLinkedAccounts').then(function(response){return response.json();}).then(function(data){return _this4.setState({twitterAccounts:data});});}}]);return LoggedIn;}(React.Component);export default LoggedIn;","map":{"version":3,"sources":["C:/repos/streamToggle/frontend/src/components/loggedIn.js"],"names":["React","LinkFirstAccount","FirstTweet","Menu","Tweet","NewTweet","clone","require","LoggedIn","props","state","tweets","twitterAccounts","getLinkedAccounts","bind","getTweets","refreshTweet","buildTweetComponents","onLogout","username","length","tweetObjs","tweetComponents","map","tweet","index","currentTweet","findIndex","element","post_id","editsContainer","setState","fetch","then","response","json","data","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport LinkFirstAccount from './linkFirstAccount.js';\r\nimport FirstTweet from './firstTweet.js';\r\nimport Menu from './menu.js';\r\nimport Tweet from './tweets/tweet.js';\r\nimport NewTweet from './tweets/newTweet.js';\r\nconst clone = require('rfdc')();\r\n\r\n\r\nclass LoggedIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tweets: [],\r\n            twitterAccounts: [],\r\n        };\r\n\r\n        this.getLinkedAccounts = this.getLinkedAccounts.bind(this);\r\n        this.getTweets = this.getTweets.bind(this);\r\n        this.refreshTweet = this.refreshTweet.bind(this);\r\n        this.buildTweetComponents = this.buildTweetComponents.bind(this);        \r\n    }\r\n\r\n \r\n    componentDidMount() {       \r\n        this.getTweets();\r\n        this.getLinkedAccounts();   \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Menubar\">\r\n                    <img src=\"./images/smt-logo.png\" alt=\"Social Media Toggle by Schmiel logo\" className=\"logo\" />\r\n                    <Menu onLogout={this.props.onLogout} twitter_accounts={this.state.twitterAccounts} refreshLinkedAccounts={this.getLinkedAccounts} refreshTweets={this.getTweets} username={this.props.username}/>\r\n                </div>                \r\n                {\r\n                    this.state.twitterAccounts.length === 0 ? <LinkFirstAccount /> :\r\n                    this.state.tweets.length === 0 ? <FirstTweet username={this.props.username} updateTweets={this.getTweets} twitterAccounts={this.state.twitterAccounts} /> :\r\n                    <div id=\"TweetsContainer\"> \r\n                        {this.buildTweetComponents(this.state.tweets)}\r\n                        <NewTweet username={this.props.username} updateTweets={this.getTweets} twitterAccounts={this.state.twitterAccounts} /> \r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    buildTweetComponents(tweetObjs) {\r\n        let tweetComponents = tweetObjs.map((tweet, index) => <Tweet tweet={tweet} twitterAccounts={this.state.twitterAccounts} refreshTweet={this.refreshTweet} updateTweets={this.getTweets} />)\r\n\r\n        return (tweetComponents);\r\n    }\r\n\r\n\r\n    refreshTweet(currentTweet) {\r\n        let index = this.state.tweets.findIndex(element => element.post_id === currentTweet.post_id);\r\n\r\n        if (index !== -1) {\r\n            let editsContainer = clone(this.state.tweets);\r\n\r\n            editsContainer[index] = clone(currentTweet);\r\n\r\n            this.setState({ tweets: editsContainer });\r\n        }\r\n    }\r\n\r\n\r\n    getTweets() {\r\n        fetch('http://streamtoggle-backend.herokuapp.com/tweet/getUserTweets')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ tweets: data }));\r\n    }\r\n\r\n\r\n    getLinkedAccounts() {\r\n        fetch('http://streamtoggle-backend.herokuapp.com/account/getLinkedAccounts')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ twitterAccounts: data }));\r\n    }\r\n}\r\n\r\nexport default LoggedIn;"]},"metadata":{},"sourceType":"module"}