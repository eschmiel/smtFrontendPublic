{"ast":null,"code":"const utilities = {\n  getCookie: function (cookieName) {\n    let cookies = document.cookie;\n\n    if (cookies) {\n      let desiredCookie = cookies.split('; ').find(cookie => cookie.startsWith(cookieName));\n      let cookieValue = desiredCookie.split('=')[1]; //Add error handling for if cookie doesn't exist later\n\n      return cookieValue;\n    }\n  },\n  doesCookieExist: function (cookieName) {\n    const cookies = document.cookie;\n    console.log(document.cookie);\n\n    if (cookies) {\n      const cookieExists = cookies.split(';').some(checkedCookie => checkedCookie.trim().startsWith(cookieName + '='));\n      console.log('loggedIn exists: ' + cookieExists);\n      return cookieExists;\n    }\n  }\n};\nexport default utilities;","map":{"version":3,"sources":["c:/repos/smtFrontend/src/utilities.js"],"names":["utilities","getCookie","cookieName","cookies","document","cookie","desiredCookie","split","find","startsWith","cookieValue","doesCookieExist","console","log","cookieExists","some","checkedCookie","trim"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AAEdC,EAAAA,SAAS,EAAE,UAAUC,UAAV,EAAsB;AAC7B,QAAIC,OAAO,GAAGC,QAAQ,CAACC,MAAvB;;AAEA,QAAIF,OAAJ,EAAa;AACT,UAAIG,aAAa,GAAGH,OAAO,CAACI,KAAR,CAAc,IAAd,EAAoBC,IAApB,CAAyBH,MAAM,IAAIA,MAAM,CAACI,UAAP,CAAkBP,UAAlB,CAAnC,CAApB;AACA,UAAIQ,WAAW,GAAGJ,aAAa,CAACC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAlB,CAFS,CAIT;;AAEA,aAAOG,WAAP;AACH;AACJ,GAba;AAedC,EAAAA,eAAe,EAAE,UAAUT,UAAV,EAAsB;AACnC,UAAMC,OAAO,GAAGC,QAAQ,CAACC,MAAzB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACC,MAArB;;AACA,QAAIF,OAAJ,EAAa;AACT,YAAMW,YAAY,GAAGX,OAAO,CAACI,KAAR,CAAc,GAAd,EAAmBQ,IAAnB,CAAyBC,aAAD,IAAmBA,aAAa,CAACC,IAAd,GAAqBR,UAArB,CAAgCP,UAAU,GAAG,GAA7C,CAA3C,CAArB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,YAAlC;AACA,aAAOA,YAAP;AACH;AACJ;AAvBa,CAAlB;AA2BA,eAAed,SAAf","sourcesContent":["const utilities = {\r\n\r\n    getCookie: function (cookieName) {\r\n        let cookies = document.cookie;\r\n\r\n        if (cookies) {\r\n            let desiredCookie = cookies.split('; ').find(cookie => cookie.startsWith(cookieName));\r\n            let cookieValue = desiredCookie.split('=')[1];\r\n\r\n            //Add error handling for if cookie doesn't exist later\r\n\r\n            return cookieValue;\r\n        }\r\n    },\r\n\r\n    doesCookieExist: function (cookieName) {\r\n        const cookies = document.cookie;\r\n        console.log(document.cookie);\r\n        if (cookies) {\r\n            const cookieExists = cookies.split(';').some((checkedCookie) => checkedCookie.trim().startsWith(cookieName + '='));\r\n            console.log('loggedIn exists: ' + cookieExists);\r\n            return cookieExists;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default utilities;"]},"metadata":{},"sourceType":"module"}