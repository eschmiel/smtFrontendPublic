{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\streamToggle\\\\frontend\\\\src\\\\components\\\\loggedIn.js\";\nimport React from 'react';\nimport LinkFirstAccount from './linkFirstAccount.js';\nimport FirstTweet from './firstTweet.js';\nimport Menu from './menu.js';\nimport TweetSection from './tweets/tweetSection.js';\nimport Tweet from './tweets/tweet.js';\nimport NewTweet from './tweets/newTweet.js';\n\nconst clone = require('rfdc')();\n\nclass LoggedIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getTwitterAccounts = this.getTwitterAccounts.bind(this);\n    this.getTweets = this.getTweets.bind(this);\n    this.refreshTweet = this.refreshTweet.bind(this);\n    this.buildTweetComponents = this.buildTweetComponents.bind(this);\n    let tweetHolder = this.getTweets();\n    this.getTwitterAccounts();\n    this.state = {\n      tweets: tweetHolder,\n      twitterAccounts: []\n    };\n  }\n\n  buildTweetComponents(tweetObjs) {\n    let tweetComponents = tweetObjs.map((tweet, index) => /*#__PURE__*/React.createElement(Tweet, {\n      tweet: tweet,\n      twitterAccounts: this.state.twitterAccounts,\n      refreshTweet: this.refreshTweet,\n      updateTweets: this.getTweets,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 63\n      }\n    }));\n    return tweetComponents;\n  }\n\n  refreshTweet(currentTweet) {\n    let index = this.state.tweets.findIndex(element => element.post_id === currentTweet.post_id);\n\n    if (index !== -1) {\n      let editsContainer = clone(this.state.tweets);\n      editsContainer[index] = clone(currentTweet);\n      this.setState({\n        tweets: editsContainer\n      });\n    }\n  }\n\n  getTweets() {\n    fetch('/getUserTweets').then(response => {\n      return response.json();\n    }).then(tweets => {\n      return tweets;\n    });\n  }\n\n  getTwitterAccounts() {\n    fetch('/getLinkedAccounts').then(response => {\n      return response.json();\n    }).then(twitterAccounts => {\n      return twitterAccounts;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Menubar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./images/smt-logo.png\",\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Menu, {\n      onLogout: this.props.onLogout,\n      twitter_accounts: this.state.twitterAccounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), this.state.twitterAccounts.length === 0 ? /*#__PURE__*/React.createElement(LinkFirstAccount, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 63\n      }\n    }) : this.state.tweets.length === 0 ? /*#__PURE__*/React.createElement(FirstTweet, {\n      username: this.props.username,\n      updateTweets: this.getTweets,\n      twitterAccounts: this.state.twitterAccounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 54\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"TweetsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, this.buildTweetComponents(this.state.tweets), /*#__PURE__*/React.createElement(NewTweet, {\n      username: this.props.username,\n      updateTweets: this.getTweets,\n      twitterAccounts: this.state.twitterAccounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\nexport default LoggedIn;","map":{"version":3,"sources":["C:/repos/streamToggle/frontend/src/components/loggedIn.js"],"names":["React","LinkFirstAccount","FirstTweet","Menu","TweetSection","Tweet","NewTweet","clone","require","LoggedIn","Component","constructor","props","getTwitterAccounts","bind","getTweets","refreshTweet","buildTweetComponents","tweetHolder","state","tweets","twitterAccounts","tweetObjs","tweetComponents","map","tweet","index","currentTweet","findIndex","element","post_id","editsContainer","setState","fetch","then","response","json","render","onLogout","length","username"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport LinkFirstAccount from './linkFirstAccount.js';\r\nimport FirstTweet from './firstTweet.js';\r\nimport Menu from './menu.js';\r\nimport TweetSection from './tweets/tweetSection.js';\r\nimport Tweet from './tweets/tweet.js';\r\nimport NewTweet from './tweets/newTweet.js';\r\n\r\nconst clone = require('rfdc')();\r\n\r\nclass LoggedIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n\r\n        this.getTwitterAccounts = this.getTwitterAccounts.bind(this);\r\n        this.getTweets = this.getTweets.bind(this);\r\n        this.refreshTweet = this.refreshTweet.bind(this);\r\n        this.buildTweetComponents = this.buildTweetComponents.bind(this);\r\n        \r\n\r\n        let tweetHolder = this.getTweets();\r\n        this.getTwitterAccounts();\r\n\r\n        this.state = {\r\n            tweets: tweetHolder,\r\n            twitterAccounts: [],\r\n        };\r\n    }\r\n\r\n \r\n    buildTweetComponents(tweetObjs) {\r\n        let tweetComponents = tweetObjs.map((tweet, index) => <Tweet tweet={tweet} twitterAccounts={this.state.twitterAccounts} refreshTweet={this.refreshTweet} updateTweets={this.getTweets}/>)\r\n\r\n        return(tweetComponents);\r\n    }\r\n\r\n\r\n    refreshTweet(currentTweet) {\r\n        let index = this.state.tweets.findIndex(element => element.post_id === currentTweet.post_id);\r\n\r\n        if (index !== -1) {\r\n            let editsContainer = clone(this.state.tweets);\r\n\r\n            editsContainer[index] = clone(currentTweet);\r\n\r\n            this.setState({ tweets: editsContainer });\r\n        }\r\n    }\r\n\r\n\r\n    getTweets() {\r\n        fetch('/getUserTweets').then((response) => { return response.json(); }).then((tweets) => { return tweets });\r\n    }\r\n\r\n\r\n    getTwitterAccounts() {       \r\n        fetch('/getLinkedAccounts').then((response) => { return response.json(); }).then((twitterAccounts) => { return twitterAccounts });        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Menubar\">\r\n                    <img src=\"./images/smt-logo.png\" className=\"logo\" />\r\n                    <Menu onLogout={this.props.onLogout} twitter_accounts={this.state.twitterAccounts} />\r\n                </div>                \r\n                {\r\n                    this.state.twitterAccounts.length === 0 ? <LinkFirstAccount /> :\r\n                    this.state.tweets.length === 0 ? <FirstTweet username={this.props.username} updateTweets={this.getTweets} twitterAccounts={this.state.twitterAccounts} /> :\r\n                    <div id=\"TweetsContainer\"> \r\n                        {this.buildTweetComponents(this.state.tweets)}\r\n                        <NewTweet username={this.props.username} updateTweets={this.getTweets} twitterAccounts={this.state.twitterAccounts} /> \r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoggedIn;"]},"metadata":{},"sourceType":"module"}